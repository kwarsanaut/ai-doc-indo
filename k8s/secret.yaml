apiVersion: v1
kind: Secret
metadata:
  name: ai-doc-processor-secrets
  labels:
    app: ai-doc-processor
type: Opaque
data:
  # OpenAI API Key (base64 encoded)
  # echo -n 'sk-your-openai-api-key-here' | base64
  OPENAI_API_KEY: c2streW91ci1vcGVuYWktYXBpLWtleS1oZXJl
  
  # Pinecone API Key (base64 encoded)
  # echo -n 'your-pinecone-api-key-here' | base64
  PINECONE_API_KEY: eW91ci1waW5lY29uZS1hcGkta2V5LWhlcmU=
  
  # Pinecone Environment (base64 encoded)
  # echo -n 'us-west1-gcp-free' | base64
  PINECONE_ENVIRONMENT: dXMtd2VzdDEtZ2NwLWZyZWU=
  
  # JWT Secret Key (base64 encoded)
  # echo -n 'your-super-secret-jwt-key-256-bit-random-string' | base64
  SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQtand0LWtleS0yNTYtYml0LXJhbmRvbS1zdHJpbmc=
  
  # Redis Password (base64 encoded, optional)
  # echo -n 'redis-password-123' | base64
  REDIS_PASSWORD: cmVkaXMtcGFzc3dvcmQtMTIz
  
  # Database Credentials (if using PostgreSQL)
  # echo -n 'postgresql://user:password@postgres:5432/ai_doc_processor' | base64
  DATABASE_URL: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAcG9zdGdyZXM6NTQzMi9haV9kb2NfcHJvY2Vzc29y
  
  # AWS Credentials (if using S3)
  # echo -n 'AKIAIOSFODNN7EXAMPLE' | base64
  AWS_ACCESS_KEY_ID: QUtJQUlPU0ZPRE5ON0VYQU1QTEU=
  # echo -n 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY' | base64
  AWS_SECRET_ACCESS_KEY: d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==
  
  # API Keys for external services
  # echo -n 'your-webhook-secret' | base64
  WEBHOOK_SECRET: eW91ci13ZWJob29rLXNlY3JldA==

---

apiVersion: v1
kind: Secret
metadata:
  name: admin-auth
  labels:
    app: ai-doc-processor
    component: admin
type: Opaque
data:
  # Admin credentials for Nginx basic auth
  # Generated with: htpasswd -nb admin your-admin-password | base64
  # Default: admin:admin123
  auth: YWRtaW46JGFwcjEkaDRiNlBaM1kkVGZMdEFXOGN3bTRoVWZ4RUFNeDFvLw==

---

apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  labels:
    app: ai-doc-processor
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry credentials for private images
  # Create with: kubectl create secret docker-registry registry-credentials \
  #   --docker-server=your-registry.com \
  #   --docker-username=your-username \
  #   --docker-password=your-password \
  #   --docker-email=your-email@example.com \
  #   --dry-run=client -o yaml
  .dockerconfigjson: eyJhdXRocyI6eyJ5b3VyLXJlZ2lzdHJ5LmNvbSI6eyJ1c2VybmFtZSI6InlvdXItdXNlcm5hbWUiLCJwYXNzd29yZCI6InlvdXItcGFzc3dvcmQiLCJlbWFpbCI6InlvdXItZW1haWxAZXhhbXBsZS5jb20iLCJhdXRoIjoiZVc5MWNpMTFjMlZ5Ym1GdFpUcDViM1Z5TFhCaGMzTjNiM0prIn19fQ==

---

apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  labels:
    app: ai-doc-processor
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  # Replace with your actual certificates
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiAoWW91ciBjZXJ0aWZpY2F0ZSBjb250ZW50IGhlcmUpIC4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLiAoWW91ciBwcml2YXRlIGtleSBjb250ZW50IGhlcmUpIC4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t

---

# Secret for external service integrations
apiVersion: v1
kind: Secret
metadata:
  name: external-services-secrets
  labels:
    app: ai-doc-processor
type: Opaque
data:
  # Slack webhook for notifications
  # echo -n 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK' | base64
  SLACK_WEBHOOK_URL: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvWU9VUi9TTEFDS1dFQkhPT0s=
  
  # Sentry DSN for error tracking
  # echo -n 'https://your-sentry-dsn@sentry.io/project-id' | base64
  SENTRY_DSN: aHR0cHM6Ly95b3VyLXNlbnRyeS1kc25Ac2VudHJ5LmlvL3Byb2plY3QtaWQ=
  
  # Email service credentials (SendGrid, etc.)
  # echo -n 'SG.your-sendgrid-api-key' | base64
  SENDGRID_API_KEY: U0cueW91ci1zZW5kZ3JpZC1hcGkta2V5
  
  # Monitoring service tokens
  # echo -n 'your-datadog-api-key' | base64
  DATADOG_API_KEY: eW91ci1kYXRhZG9nLWFwaS1rZXk=

---

# ConfigMap for sensitive configuration that doesn't need encryption
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-doc-processor-sensitive-config
  labels:
    app: ai-doc-processor
data:
  # Non-secret but sensitive configuration
  PINECONE_INDEX_NAME: "document-processor-prod"
  AWS_REGION: "ap-southeast-1"
  AWS_S3_BUCKET: "ai-doc-processor-storage-prod"
  
  # Database configuration
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "ai_doc_processor"
  DB_USER: "app_user"
  
  # Redis configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # Celery configuration
  CELERY_TASK_SERIALIZER: "json"
  CELERY_RESULT_SERIALIZER: "json"
  CELERY_ACCEPT_CONTENT: "json"
  
  # Email configuration
  EMAIL_HOST: "smtp.sendgrid.net"
  EMAIL_PORT: "587"
  EMAIL_USE_TLS: "true"
  EMAIL_FROM: "noreply@yourdomain.com"
  
  # Monitoring endpoints
  SENTRY_ENVIRONMENT: "production"
  DATADOG_SITE: "datadoghq.com"
  
  # Business configuration
  ENTERPRISE_FEATURES: "true"
  WEBHOOK_TIMEOUT_SECONDS: "30"
  MAX_CONCURRENT_JOBS: "50"
